#!../../gen/bootstrap.py

layouts:

  spread:
  - master -> worker

  gather:
  - master <- worker

topologies:

  spread:
    type: pipeline
    layout: spread

  gather:
    type: pipeline
    layout: gather


services:

  worker:
    worker: python2 /code/factor_processor.py --pullpush $URL_SPREAD $URL_GATHER

  master:
    gen_numbers: python2 /code/gen_numbers.py --rate-limit $RATE_LIMIT --topology $URL_SPREAD
    checker: python2 /code/factor_pull.py --topology $URL_GATHER

tests:

  light:
    duration: 120
    vars:
      RATE_LIMIT: 100
    instances:
      worker: 2

  medium:
    duration: 120
    vars:
      RATE_LIMIT: 1000
    instances:
      worker: 2

  heavy:
    duration: 120
    vars:
      RATE_LIMIT: 100000
    instances:
      worker: 3

  drop:
    duration: 180
    vars:
      RATE_LIMIT: 1000
    instances:
      worker: 2
    timeline:
      30:
      - node: worker1
        exec: &stopspread sudo iptables -A test-chain -p tcp --sport $PORT_SPREAD -j REJECT --reject-with tcp-reset
      60:
      - node: worker1
        exec: &resumeipt sudo iptables -D test-chain 1
      90:
      - node: worker0
        exec: *stopspread
      120:
      - node: worker0
        exec: *resumeipt

  longdrop:
    duration: &longdur 3600
    vars:
      RATE_LIMIT: 1000
    instances:
      worker: 2
    timeline: &longtimeline
      600:
      - node: worker1
        exec: *stopspread
      1200:
      - node: worker1
        exec: *resumeipt
      1800:
      - node: worker0
        exec: *stopspread
      2400:
      - node: worker0
        exec: *resumeipt

  longlight:
    duration: *longdur
    vars:
      RATE_LIMIT: 100
    instances:
      worker: 2
    timeline: *longtimeline

graphs:
  Workers Received:
    role: worker
    def: worker-socket.pull/derive-messages_received.rrd:value:AVERAGE

